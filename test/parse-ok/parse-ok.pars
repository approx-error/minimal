Indentation increase = child node to the one above
Indentation same = sibling node to the one above

[Source]
  [Module File]
    [Module Part]
      [Program Block Keyword: }}}]
      [Identifier: mod1]
      [Punctuational Separator: :]
      [Module Sequence]
        [Import]
          [Control Keyword: M::]
            [Literal: "mini.mini"]
            [Punctuational Separator: ;]
        [Module Sequence]
          [Import]
            [Control Keyword: C::]
              [Literal: "stdlib.h"]
              [Punctuational Separator: ;]
      [Terminating Keyword: {{{]
  [Source]
    [Module File]
      [Module Part]
        [Program Block Keyword: }}}]
        [Identifier: mod2]
        [Punctuational Separator: :]
        [Module Sequence]
          [Import]
            [Control Keyword: ::]
              [Identifier: mod1]
              [Punctuational Separator: ;]
          [Module Sequence]
            [Type Alias]
              [Type Expression]
                [Type Keyword: <#>]
              [Control Keyword: ->]
              [Type Keyword: <status>]
              [Punctuational Separator: ;]
        [Terminating Keyword: {{{]
    [Source]
      [Main File]
        [Program Block Keyword: !~>..<~!]
        [Module Part]
          [Program Block Keyword: }}}]
          [Identifier: mmod]
          [Punctuational Separator: :]
          [Module Sequence]
            [Import]
              [Control Keyword: ::]
                [Identifier: mod2]
                [Punctuational Separator: ;]
            [Module Sequence]
              [Import]
                [Control Keyword: ::]
                  [Identifier: exmod4]
                  [Punctuational Separator: ;]
              [Module Sequence]
                [Type Alias]
                  [Type Expression]
                    [Type Keyword: [#]]
                  [Control Keyword: ->]
                  [Type Keyword: <vector>]
                  [Punctuational Separator: ;]
                [Module Sequence]
                  [Declaration]
                    [Type Expression]
                      [Type Keyword: <#>]
                    [Identifier: NUM]
                    [Binary Assignment Operator: :=]
                    [Expression]
                      [Literal: 5]
                    [Punctuational Separator: ;]
                  [Module Sequence]
                    [Declaration]
                      [Type Expression]
                        [Type Keyword: [#]]
                      [Identifier: list]
                      [Binary Assignment Operator: :=]
                      [Collection]
                        [Parenthetical Separator: []
                        [List]
                          [Literal: 3]
                          [Punctuational Separator: ,]
                          [List]
                            [Literal: 4]
                            [Punctuational Separator: ,]
                            [List]
                              [Identifier: NUM]
                        [Parenthetical Separator: ]]
                      [Punctuational Separator: ;]
                    [Module Sequence]
                      [Declaration]
                        [Type Expression]
                          [Type Keyword: [":#]]
                        [Identifier: dict]
                        [Binary Assignment Operator: :=]
                        [Collection]
                          [Parenthetical Separator: []
                          [Associative Array]
                            [Literal: "hello"]
                            [Punctuational Separator: :]
                            [Literal: 0]
                            [Punctuational Separator: ,]
                            [Associative Array]
                              [Literal: "hi"]
                              [Punctuational Separator: :]
                              [Literal: 1]
                              [Punctuational Separator: ,]
                              [Associative Array]
                                [Literal: "howdy"]
                                [Punctuational Separator: :]
                                [Literal: 2]
                          [Parenthetical Separator: ]]
                        [Punctuational Separator: ;]
          [Terminating Keyword: {{{]
        [Main Part]
          [Program Block Keyword: >>>]
          [Identifier: prog]
          [Literal Keyword: [..]]
          [Punctuational Separator: :]
          [Sequence]
            [Statement]
              [Control]
                [Flow Control]
                  [Control Keyword: <-]
                  [Expression]
                    [Literal: 0]
              [Punctuational Separator: ;]
          [Terminating Keyword: <<<]
