// Indentation increase = child node to the one above
// Indentation same = sibling node to the one above

[Source]
  [Module File]
    [Module Part]
      [Program Block Keyword: }}}]
      [Identifier: mod1]
      [Punctuational Separator: :]
      [Module Sequence]
        [Import]
          [Control Keyword: M::]
            [Literal: "mini.mini"]
            [Punctuational Separator: ;]
        [Module Sequence]
          [Import]
            [Control Keyword: C::]
              [Literal: "stdlib.h"]
              [Punctuational Separator: ;]
          [Module Sequence]
            [Subprogram]
              [Program Block Keyword: $$]
              [Identifier: max]
              [Parenthetical Separator: (]
                [Type Expression]
                  [Type Keyword: <#>]
                [Identifier: num1]
                [Punctuational Separator: ,]
                [Parameter List]
                  [Type Expression]
                    [Type Keyword: <#>]
                  [Identifier: num2]
              [Parenthetical Separator: )]
              [Control Keyword: ->]
              [Type Expression]
                [Type Keyword: <#>]
              [Punctuational Separator: :]
              [Sequence]
                [Statement]
                  [Declaration]
                    [Type Expression]
                      [Type Keyword: <#>]
                    [Identifier: res]
                  [Punctuational Separator: ;]
                [Sequence]
                  [Branch]
                    [If-Block]
                      [Branch Keyword: ??]
                      [Logical Expression]
                        [Literal Keyword: T]
                      [Punctuational Separator: :]
                      [Sequence]
                        [Statement]
                          [Designation]
                            [Assignment]
                              [Identifier: res]
                              [Binary Assignment Operator: :=]
                              [Expression]
                                [Literal: 2]
                          [Punctuational Separator: ;]
                      [Else-Block]
                        [Terminating Keyword: |.]
                        [Punctuational Separator: :]
                        [Sequence]
                          [Statement]
                            [Designation]
                              [Assignment]
                                [Identifier: res]
                                [Binary Assignment Operator: :=]
                                [Expression]
                                  [Literal: 3]
                            [Punctuational Separator: ;]
                        [Terminating Keyword: ~?]
                  [Sequence]
                    [Statement]
                      [Control]
                        [Flow Control]
                          [Control Keyword: <-]
                          [Expression]
                            [Literal: 5]
                      [Punctuational Separator: ;]
              [Terminating Keyword: ~$]
      [Terminating Keyword: {{{]
  [Source]
    [Module File]
      [Module Part]
        [Program Block Keyword: }}}]
        [Identifier: mod2]
        [Punctuational Separator: :]
        [Module Sequence]
          [Import]
            [Control Keyword: ::]
              [Identifier: mod1]
              [Punctuational Separator: ;]
          [Module Sequence]
            [Type Alias]
              [Type Expression]
                [Type Keyword: <#>]
              [Control Keyword: ->]
              [Type Keyword: <status>]
              [Punctuational Separator: ;]
        [Terminating Keyword: {{{]
    [Source]
      [Main File]
        [Program Block Keyword: !~>..<~!]
        [Module Part]
          [Program Block Keyword: }}}]
          [Identifier: mmod]
          [Punctuational Separator: :]
          [Module Sequence]
            [Import]
              [Control Keyword: ::]
                [Identifier: mod2]
                [Punctuational Separator: ;]
            [Module Sequence]
              [Import]
                [Control Keyword: ::]
                  [Identifier: exmod4]
                  [Punctuational Separator: ;]
              [Module Sequence]
                [Type Alias]
                  [Type Expression]
                    [Type Keyword: [#]]
                  [Control Keyword: ->]
                  [Type Keyword: <vector>]
                  [Punctuational Separator: ;]
                [Module Sequence]
                  [Module Declaration]
                    [Type Expression]
                      [Type Keyword: <#>]
                    [Identifier: NUM]
                    [Binary Assignment Operator: :=]
                    [Expression]
                      [Literal: 5]
                    [Punctuational Separator: ;]
                  [Module Sequence]
                    [Module Declaration]
                      [Type Expression]
                        [Type Keyword: [#]]
                      [Identifier: list]
                      [Binary Assignment Operator: :=]
                      [Collection]
                        [Parenthetical Separator: []
                        [List]
                          [Literal: 3]
                          [Punctuational Separator: ,]
                          [List]
                            [Literal: 4]
                            [Punctuational Separator: ,]
                            [List]
                              [Identifier: NUM]
                        [Parenthetical Separator: ]]
                      [Punctuational Separator: ;]
                    [Module Sequence]
                      [Module Declaration]
                        [Type Expression]
                          [Type Keyword: [":#]]
                        [Identifier: dict]
                        [Binary Assignment Operator: :=]
                        [Collection]
                          [Parenthetical Separator: []
                          [Associative Array]
                            [Literal: "hello"]
                            [Punctuational Separator: :]
                            [Literal: 0]
                            [Punctuational Separator: ,]
                            [Associative Array]
                              [Literal: "hi"]
                              [Punctuational Separator: :]
                              [Literal: 1]
                              [Punctuational Separator: ,]
                              [Associative Array]
                                [Literal: "howdy"]
                                [Punctuational Separator: :]
                                [Literal: 2]
                          [Parenthetical Separator: ]]
                        [Punctuational Separator: ;]
          [Terminating Keyword: {{{]
        [Main Part]
          [Program Block Keyword: >>>]
          [Identifier: prog]
          [Literal Keyword: [..]]
          [Punctuational Separator: :]
          [Sequence]
            [Branch]
              [Loop-Block]
                [While-Loop]
                  [Branch Keyword: @@]
                  [Logical Expression]
                    [Literal Keyword: T]
                  [Punctuational Separator: :]
                  [Sequence]
                    [Statement]
                      [Control]
                        [Input/Output -Control]
                          [Control Keyword: !]
                          [Literal: "Hello"]
                          [Control Keyword: ->]
                          [Literal Keyword: ...]
                      [Punctuational Separator: ;]
                    [Sequence]
                      [Statement]
                        [Designation]
                          [Incrementation]
                            [Identifier: i]
                            [Unary Assignment Operator: ++]
                        [Punctuational Separator: ;]
                  [Terminating Keyword: ~@]
            [Sequence]
              [Branch]
                [Loop-Block]
                  [For-Loop]
                    [Branch Keyword: @@]
                    [Declaration]
                      [Type Expression]
                        [Type Keyword: <#>]
                      [Identifier: i]
                      [Binary Assignment Operator: :=]
                      [Expression]
                        [Literal: 5]
                    [Punctuational Separator: ;]
                    [Logical Expression]
                      [Literal Keyword: T]
                    [Punctuational Separator: ;]
                    [Incrementation]
                      [Identifier: i]
                      [Unary Assignment Operator: ++]
                    [Punctuational Separator: :]
                    [Sequence]
                      [Statement]
                        [Control]
                          [Input/Output -Control]
                            [Control Keyword: !]
                            [Literal: "Hi"]
                            [Control Keyword: ->]
                            [Literal Keyword: ...]
                        [Punctuational Separator: ;]
                    [Terminating Keyword: ~@]
              [Sequence]
                [Branch]
                  [Switch-Block]
                    [Branch Keyword: ##]
                    [Expression]
                      [Literal: 20]
                    [Punctuational Separator: :]
                    [Case-Block]
                      [Terminating Keyword: #=]
                      [Literal: 10]
                      [Punctuational Separator: :]
                      [Sequence]
                        [Statement]
                          [Control]
                            [Input/Output -Control]
                              [Control Keyword: !]
                              [Literal: "Ten"]
                              [Control Keyword: ->]
                              [Literal Keyword: ...]
                          [Punctuational Separator: ;]
                        [Sequence]
                          [Statement]
                            [Control]
                              [Flow Control]
                                [Control Keyword: .]
                            [Punctuational Separator: ;]
                      [Case-Block]
                        [Terminating Keyword: #=]
                        [Literal: 9]
                        [Punctuational Separator: :]
                        [Sequence]
                          [Statement]
                            [Control]
                              [Input/Output -Control]
                                [Control Keyword: !]
                                [Literal: "Nine"]
                                [Control Keyword: ->]
                                [Literal Keyword: ...]
                            [Punctuational Separator: ;]
                          [Sequence]
                            [Statement]
                              [Control]
                                [Flow Control]
                                  [Control Keyword: .]
                              [Punctuational Separator: ;]
                        [Terminating Keyword: ~#]
                [Sequence]
                  [Statement]
                    [Control]
                      [Function Call]
                        [Control Keyword: $]
                        [Identifier: max]
                        [Parenthetical Separator: (]
                          [Argument List]
                            [Expression]
                              [Literal: 5]
                            [Punctuational Separator: ,]
                            [Argument List]
                              [Expression]
                                [Literal: 6]
                          [Parenthetical Separator: )]
                    [Punctuational Separator: ;]
                  [Sequence]
                    [Statement]
                      [Control]
                        [Flow Control]
                          [Control Keyword: <-]
                          [Expression]
                            [Literal: 0]
                      [Punctuational Separator: ;]
          [Terminating Keyword: <<<]
